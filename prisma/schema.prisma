// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model AppUser {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  userId      String  @unique
  email       String  @unique
  password    String?
  displayName String?
  photoURL    String?

  role String?

  meta     AppUserMetadata?
  settings AppUserSettings?

  @@map("appUser")
}

model AppUserMetadata {
  appUserMetadataId String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @unique
  referralCode      String?
  referredBy        String?

  pushToken       String?
  pushTokenMobile String?

  appUser AppUser @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("appUserMetadata")
}

model AppUserSettings {
  appUserSettingsId String @id @default(auto()) @map("_id") @db.ObjectId
  userId            String @unique

  showNotifications Boolean @default(true)

  appUser AppUser @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("appUserSettings")
}

model Question {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title   String @unique
  content String
  image   String
  answer  String
  type    String // trivia / swipe / sing-the-lyrics

  isDeleted Boolean @default(false)

  @@map("question")
}
