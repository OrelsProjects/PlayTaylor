// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model AppUser {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  userId      String  @unique
  email       String  @unique
  password    String?
  displayName String?
  photoURL    String?

  role String?

  meta             AppUserMetadata?
  settings         AppUserSettings?
  QuestionResponse QuestionResponse[]
  AppUserOrders    AppUserOrders[]

  @@map("appUser")
}

// Paypal order
model AppUserOrders {
  appUserOrdersId String   @id @default(auto()) @map("_id") @db.ObjectId
  userId          String
  orderId         String
  payerId         String
  paymentId       String
  paymentSource   String
  amount          Float
  currency        String
  status          String
  createdAt       DateTime @default(now())

  appUser AppUser @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("appUserOrders")
}

model AppUserMetadata {
  appUserMetadataId String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @unique
  referralCode      String?
  referredBy        String?

  pushToken       String?
  pushTokenMobile String?

  appUser AppUser @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("appUserMetadata")
}

model AppUserSettings {
  appUserSettingsId String @id @default(auto()) @map("_id") @db.ObjectId
  userId            String @unique

  showNotifications Boolean @default(true)

  appUser AppUser @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("appUserSettings")
}

model Question {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title      String @unique
  content    String
  image      String
  answer     String
  type       String // trivia / swipe / sing-the-lyrics
  difficulty String // debut / midnights / folklore

  createdAt DateTime? @default(now())

  isDeleted         Boolean            @default(false)
  questionResponses QuestionResponse[]

  @@map("question")
}

model QuestionResponse {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  questionId String  @db.ObjectId
  userId     String  @db.ObjectId
  response   String // answers by user
  isCorrect  Boolean

  answeredAt DateTime @default(now())

  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  user     AppUser  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("questionResponse")
}
